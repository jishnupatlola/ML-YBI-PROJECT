# -*- coding: utf-8 -*-
"""lproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AvckC_LgxqQ0JeE2649tCiLmLK5uTXNX

TITLE:HAND WRITTEEN DIGIT PREDICTION -CLASSIFICATION ANALYSIS

OBJECTIVE:
The objective of the project is to develop a machine learning model for handwritten digit prediction and classification analysis
1
. The project aims to accurately classify handwritten digits by analyzing their features and applying appropriate algorithms. This model can be used in various applications, such as image recognition, data entry automation, and digital archiving

DATA SOURCE:
The data source for this project is the sklearn.datasets library, which provides a dataset of handwritten digits
1
. The dataset contains 1,797 images of digits (0-9) with a resolution of 8x8 pixels. Each image is represented as a 64-dimensional vector, and the dataset includes the corresponding labels for each image.
The dataset is loaded using the load_digits() function, and the images are visualized using matplotlib. The data is preprocessed by reshaping the images to a 1-dimensional array and scaling the pixel values to a range of 0-1. The dataset is then split into training and testing sets using the train_test_split() function from sklearn.model_selection.

IMPORT LIBRARY
"""

import pandas as pd

import matplotlib.pyplot as plt

"""IMPORT DATA"""

from sklearn.datasets import load_digits

"""DESCRIBE DATA"""

df=load_digits()

"""DATA VISUALIZATION"""

_,axes = plt.subplots(nrows=1,ncols=4,figsize=(10,3))
for ax,image,label in zip(axes,df.images,df.target):
  ax.set_axis_off()
  ax.imshow(image,cmap=plt.cm.gray_r, interpolation="nearest")
  ax.set_title("training=%i"%label)

"""DATA PREPROCESSING"""

df.images.shape

df.images[0]

len(df.images)

n_samples=len(df.images)
data  =df.images.reshape  ((n_samples,-1))

data[0]

data[0].shape

data.shape

"""Target Variable (y) and Feature Variables (X)"""

data.min()

data.max()

data=data/16

data.max()

data[0]

"""Train Test Split"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(data,df.target,test_size=0.3)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

"""MODELING

"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier()

rf.fit(x_train,y_train)

"""PREDICT TEST DATA"""

y_pred=rf.predict(x_test)

y_pred

"""MODEL EVALUATION AND ACCURACY TESTING"""

from sklearn.metrics import confusion_matrix ,classification_report

confusion_matrix(y_test,y_pred)

print(classification_report(y_test,y_pred))

"""EXPLAINATION:
The project titled "HAND WRITTEEN DIGIT PREDICTION -CLASSIFICATION ANALYSIS" involves building a machine learning model for predicting and classifying handwritten digits using the Random Forest Classifier algorithm. The project's objective is to demonstrate the use of machine learning techniques for image recognition tasks and to achieve high accuracy in classifying handwritten digits.
The data source for this project is the sklearn.datasets library, which provides a dataset of handwritten digits. The dataset contains 1,797 images of digits (0-9) with a resolution of 8x8 pixels. Each image is represented as a 64-dimensional vector, and the dataset includes the corresponding labels for each image.The project begins by importing the necessary libraries, including pandas, matplotlib, and scikit-learn. The dataset is then loaded using the load_digits() function from scikit-learn. The data is visualized using matplotlib, which displays four random images from the dataset along with their labels.
Next, the data is preprocessed by reshaping the images to a 1-dimensional array and scaling the pixel values to a range of 0-1. This is done to ensure that the data is in a format that can be used for machine learning.The preprocessed data is then split into training and testing sets using the train_test_split() function from scikit-learn. The training set is used to train the model, and the testing set is used to evaluate the model's performance.The Random Forest Classifier algorithm from scikit-learn is used to classify the digits. The model is trained on the training set and then used to predict the digits in the testing set.The model's performance is evaluated using the confusion_matrix and classification_report functions from scikit-learn. The confusion matrix displays the number of correct and incorrect predictions for each digit, while the classification report displays the precision, recall, and F1 score for each digits.The project's code is well-organized and easy to follow. The comments in the code provide a clear explanation of each step of the process, making it easy to understand the project's objective and implementation.In summary, this project demonstrates the use of machine learning algorithms for handwritten digit prediction and classification analysis. The project utilizes a dataset of handwritten digits and applies data preprocessing techniques and model evaluation methods to achieve accurate classification results. The project's code is well-organized and easy to follow, making it a useful resource for anyone interested in image recognition tasks.
"""